---
- stat: path=/tmp/diskflag
  register: diskflag

- shell: parted -s "{{ app_env.volume_point }}" mklabel msdos
  when: diskflag.stat.exists == false

- shell: parted -s "{{ app_env.volume_point }}" mkpart primary ext4 1049kb 100%
  when: diskflag.stat.exists == false

- lineinfile: dest=/tmp/diskflag line="disk is now partitioned!" create=yes

- filesystem: fstype=ext4 dev="{{ app_env.volume_point }}1"
- mount: name=/storage src="{{ app_env.volume_point }}1" fstype=ext4 state=mounted

- shell: ip -4 -o addr | grep -v '127.0.0.1' | awk 'NR==1{print $4}' | cut -d '/' -f 1
  register: local_ip

- shell: ip -4 -o addr | grep -v '127.0.0.1' | awk 'NR==1{print $2}'
  register: netcard

- name: Install sipcalc
  apt:
    name=sipcalc
    state=latest
    update_cache=yes

- shell: sipcalc "{{ netcard.stdout }}" | grep 'Network address' | cut -d "-" -f 2 | xargs
  register: net_addr

- shell: sipcalc "{{ netcard.stdout }}" | grep 'Network mask (bits)' | cut -d "-" -f 2 | xargs
  register: net_bit

- name: Creates share directory for database
  file: path=/storage/sqldatabase state=directory

- name: Creates share directory for wpcontent
  file: path=/storage/wpcontent state=directory

- name: Creates directory for database mounting point
  file: path=/var/lib/mysql state=directory

- name: Install NFS server
  apt:
    name=nfs-kernel-server
    state=latest
    update_cache=yes

- name: Setup NFS shares
  lineinfile:
    dest: /etc/exports
    line: "{{ item.name }} {{ item.net }}(rw,sync,no_root_squash,no_subtree_check)"
  with_items:
    - { name: "/storage/wpcontent",
        net: "{{ net_addr.stdout }}/{{ net_bit.stdout }}" }
    - { name: "/storage/sqldatabase",
        net: "{{ net_addr.stdout }}/{{ net_bit.stdout }}" }

- name: nfs export
  shell: exportfs -a

- service: name=nfs-kernel-server state=restarted enabled=yes

- name: Mount the database data directory
  mount:
    name: /var/lib/mysql
    src: "{{ local_ip.stdout }}:/storage/sqldatabase"
    state: mounted
    fstype: nfs

- name: Install mysql and libraries
  apt:
    name="{{ item }}"
    state=latest
    update_cache=yes
  with_items:
    - mysql-server
    - python-mysqldb

- service: name=mysql state=stopped enabled=yes

- stat: path=/etc/mysql/my.cnf
  register: mysqlflag

- name: Configure mysql 5.5
  replace:
    dest: "/etc/mysql/my.cnf"
    regexp: '^bind-address[ \t]*=[ ]*127\.0\.0\.1'
    replace: "bind-address  = {{ local_ip.stdout }}"
    backup: no
  when: mysqlflag.stat.exists == true

- stat: path=/etc/mysql/mysql.conf.d/mysqld.cnf
  register: mysqlflag

- name: Configure mysql 5.6+
  replace:
    dest: "/etc/mysql/mysql.conf.d/mysqld.cnf"
    regexp: '^bind-address[ \t]*=[ ]*127\.0\.0\.1'
    replace: "bind-address  = {{ local_ip.stdout }}"
    backup: no
  when: mysqlflag.stat.exists == true

- service: name=mysql state=started enabled=yes

- name: create wordpress database
  mysql_db:
    name: "decision2016"
    state: "{{ item }}"
  with_items:
    - ['present', 'absent', 'present']

- name: Add a user
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    host: "%"
    priv: 'decision2016.*:ALL'
    state: present

